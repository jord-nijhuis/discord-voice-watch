name: Release

on:
    push:
        tags:
            - '*'

jobs:
    build:
        strategy:
            matrix:
                os: [ linux, windows, darwin ]
                arch: [ amd64, arm64 ]
        runs-on: ubuntu-latest
        name: "Build ${{matrix.os}} ${{matrix.arch}}"
        steps:
            -   uses: actions/checkout@v4

            -   name: Set up Go
                uses: actions/setup-go@v4
                with:
                    go-version: '1.23'

            -   name: Build
                run: |
                    export output="discord-voice-watch.${{matrix.os}}-${{matrix.arch}}"

                    if [ "${{matrix.os}}" = "windows" ]; then
                        export output="${output}.exe"
                    fi

                    export version=$(git describe --tags 2> /dev/null || echo "0.0.0-`git describe --tags --long --dirty --always`")
                    env GOOS=${{matrix.os}} GOARCH=${{matrix.arch}} go build -v -o $output -ldflags "-X discord-voice-watch.Version=$version" cmd/discord-voice-watch/main.go

            -   name: Get latest release info
                id: query-release-info
                uses: release-flow/keep-a-changelog-action@v2
                with:
                    command: query
                    version: latest

            -   name: Dump release info
                run: echo "${{ steps.query-release-info.outputs.release-notes }} > release-notes.txt"

            -   name: Release
                uses: softprops/action-gh-release@v2
                with:
                    body_path: release-notes.txt
                    files: |
                        discord-voice-watch.*
